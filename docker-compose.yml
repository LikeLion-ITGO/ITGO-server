services:
  mysql:
    image: mysql:8.0
    container_name: itgo-mysql
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
      - ../mysql_config:/etc/mysql/conf.d  # 설정 파일 마운트
    networks:
      - my-network

  redis:
    image: redis:7
    container_name: itgo-redis
    volumes:
      - redis_data:/data
    networks:
      - my-network

  ai:
    container_name: itgo-ai
    image: jostar1013/itgo-ai:v3
    expose:
      - "8000"
    environment:
      PYTHONUNBUFFERED: "1"
    restart: unless-stopped
    networks:
      - my-network

  application:
    image: hyukwon20/itgo_server:latest
    container_name: itgo-application
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      ai:
        condition: service_started
    expose:
      - "8080"
    networks:
      - my-network

  nginx:
    image: nginx:latest
    container_name: itgo-nginx
    restart: always
    ports:
      - "80:80"     # HTTP 요청을 80번 포트에서 받음
      - "443:443"   # HTTPS 개방
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    depends_on:
      - application
      - ai
    networks:
      - my-network

  certbot:
    image: certbot/certbot:latest
    container_name: itgo-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt

networks:
  my-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
